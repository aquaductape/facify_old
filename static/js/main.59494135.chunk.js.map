{"version":3,"sources":["components/ImageLinkForm/ImageLinkForm.js","components/Error/Error400.js","components/FaceRecognition/ImagePanel/Bounding/BoundingBox.js","components/FaceRecognition/ImagePanel/ImageDemo.js","components/FaceRecognition/ImagePanel/Bounding/BoundingInfo.js","components/FaceRecognition/ImagePanel/InfoDemo.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","utils/createCanvas.js","components/Stats/Stats.js","App.js","serviceWorker.js","index.js"],"names":["ImageLinkForm","_ref","inputValue","onInputChange","onButtonSubmit","react_default","a","createElement","className","autoFocus","spellCheck","value","onChange","type","onClick","Error400","BoundingBox","boundingBox","renderBox","top","top_row","right","right_col","bottom","bottom_row","left","left_col","style","ImageDemo","imageUrl","onMainImageLoad","onLoad","e","src","alt","map","_ref2","region_info","bounding_box","id","concat","Bounding_BoundingBox","key","BoundingInfo","boxId","onCanvas","ref","canvas","InfoDemo","i","Bounding_BoundingInfo","FaceRecognition","imageStatus","maxWidth","ImagePanel_ImageDemo","ImagePanel_InfoDemo","Error_Error400","Logo","findCanvasItem","canvasCollection","find","removePreviousCanvasCollection","filteredCollection","filter","clientHeight","clientWidth","this","setState","createCanvas","img","imgClientWidth","offsetWidth","imgClientHeight","offsetHeight","imgNaturalWidth","naturalWidth","imgNaturalHeight","naturalHeight","boundingBoxTotalWidth","boundingBoxTotalHeight","state","canvasWidth","ctx","getContext","startCropWidth","startCropHeight","endCropWidth","endCropHeight","height","width","drawImage","Stats","strFace","length","app","Clarifai","App","apiKey","process","input","imageStatusOk","imageSize","bbIdx","_this","target","slice","canvasItem","push","boundingBoxArr","forEach","call","Object","assertThisInitialized","models","predict","FACE_DETECT_MODEL","then","response","box","outputs","data","regions","err","status","components_Logo_Logo","components_ImageLinkForm_ImageLinkForm","components_Stats_Stats","components_FaceRecognition_FaceRecognition","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59494135.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageLinkForm = ({ inputValue, onInputChange, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\tspellCheck=\"false\"\r\n\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\tonChange={onInputChange}\r\n\t\t\t\t\t\tclassName=\"input-text\"\r\n\t\t\t\t\t\ttype=\"\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button onClick={onButtonSubmit} className=\"input-button\">\r\n\t\t\t\t\t\tDetect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst Error400 = () => {\r\n\treturn <div className=\"white\">Oops! Something went wrong :( Perhapes the url is incorrect</div>;\r\n};\r\n\r\nexport default Error400;\r\n","import React from 'react';\r\n\r\nconst BoundingBox = ({ boundingBox }) => {\r\n\tconst renderBox = {\r\n\t\ttop: boundingBox.top_row * 100 + '%',\r\n\t\tright: 100 - boundingBox.right_col * 100 + '%',\r\n\t\tbottom: 100 - boundingBox.bottom_row * 100 + '%',\r\n\t\tleft: boundingBox.left_col * 100 + '%'\r\n\t};\r\n\treturn <div className=\"bounding-box\" style={renderBox} />;\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React from 'react';\r\nimport BoundingBox from './Bounding/BoundingBox';\r\n\r\nconst ImageDemo = ({ imageUrl, onMainImageLoad, boundingBox }) => {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<img onLoad={(e) => onMainImageLoad(e, boundingBox)} className=\"image-demo\" src={imageUrl} alt=\"\" />\r\n\t\t\t{boundingBox.map(({ region_info }) => {\r\n\t\t\t\tconst boundingBox = region_info.bounding_box;\r\n\t\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\r\n\t\t\t\treturn <BoundingBox key={id} boundingBox={region_info.bounding_box} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageDemo;\r\n","import React from 'react';\r\n\r\nconst BoundingInfo = ({ boxId, imageUrl, boundingBox, onCanvas }) => {\r\n\tconst height = 30;\r\n\tconst boundingBoxWidth = (boundingBox.right_col - boundingBox.left_col) * 100;\r\n\tconst boundingBoxHeight = (boundingBox.bottom_row - boundingBox.top_row) * 100;\r\n\tconst infoImage = {\r\n\t\tbackgroundImage: `url('${imageUrl}')`,\r\n\t\t// width: bbCollectionSize.width * height / bbCollectionSize.height,\r\n\t\t// backgroundSize: bbCollectionSize.width * height / bbCollectionSize.height * 10 + '%',\r\n\t\tbackgroundPosition: `${boundingBox.left_col * 100}% ${boundingBox.top_row * 100}%`,\r\n\t\theight: height\r\n\t};\r\n\tdebugger;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<canvas ref={(canvas) => (canvas ? onCanvas(canvas, boxId) : null)} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoundingInfo;\r\n","import React from 'react';\r\nimport BoundingInfo from './Bounding/BoundingInfo';\r\n\r\nconst InfoDemo = ({ imageUrl, boundingBox, onCanvas }) => {\r\n\treturn (\r\n\t\t<div className=\"info-demo\">\r\n\t\t\t{boundingBox.map(({ region_info }, i) => {\r\n\t\t\t\tconst boundingBox = region_info.bounding_box;\r\n\t\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<BoundingInfo\r\n\t\t\t\t\t\tkey={id}\r\n\t\t\t\t\t\tboxId={id}\r\n\t\t\t\t\t\timageUrl={imageUrl}\r\n\t\t\t\t\t\tboundingBox={region_info.bounding_box}\r\n\t\t\t\t\t\tonCanvas={onCanvas}\r\n\t\t\t\t\t/>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InfoDemo;\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\nimport Error400 from '../Error/Error400';\r\nimport ImageDemo from './ImagePanel/ImageDemo';\r\nimport InfoDemo from './ImagePanel/InfoDemo';\r\n\r\nconst FaceRecognition = ({ imageStatus, imageUrl, boundingBox, onMainImageLoad, onCanvas }) => {\r\n\tlet render;\r\n\tif (imageStatus === null) {\r\n\t\trender = null;\r\n\t} else if (imageStatus !== 400) {\r\n\t\trender = (\r\n\t\t\t<div className=\"image-panel\" style={{ maxWidth: '800px' }}>\r\n\t\t\t\t<ImageDemo imageUrl={imageUrl} boundingBox={boundingBox} onMainImageLoad={onMainImageLoad} />\r\n\t\t\t\t<InfoDemo imageUrl={imageUrl} boundingBox={boundingBox} onCanvas={onCanvas} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\trender = <Error400 />;\r\n\t}\r\n\treturn render;\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst Logo = () => {\r\n\treturn <div id=\"logo\">ᖴᗩᑕIᖴY</div>;\r\n};\r\n\r\nexport default Logo;\r\n","const findCanvasItem = (id, canvasCollection) => {\r\n\treturn canvasCollection.find((canvas) => canvas.id === id);\r\n};\r\n\r\nconst removePreviousCanvasCollection = function(canvasCollection) {\r\n\tconst filteredCollection = canvasCollection.filter((canvas) => canvas.clientHeight && canvas.clientWidth);\r\n\tdebugger;\r\n\tthis.setState({ canvasCollection: filteredCollection });\r\n};\r\n\r\nconst createCanvas = function(id, img, boundingBox) {\r\n\tconst imgClientWidth = img.offsetWidth;\r\n\tconst imgClientHeight = img.offsetHeight;\r\n\tconst imgNaturalWidth = img.naturalWidth;\r\n\tconst imgNaturalHeight = img.naturalHeight;\r\n\r\n\tconst boundingBoxTotalWidth =\r\n\t\timgClientWidth - imgClientWidth * (boundingBox.left_col + (1 - boundingBox.right_col));\r\n\tconst boundingBoxTotalHeight =\r\n\t\timgClientHeight - imgClientHeight * (boundingBox.top_row + (1 - boundingBox.bottom_row));\r\n\r\n\tconst canvasCollection = this.state.canvasCollection;\r\n\tlet canvas = findCanvasItem(id, canvasCollection);\r\n\tcanvas = canvas.canvas;\r\n\tconst canvasHeight = 70;\r\n\tconst canvasWidth = boundingBoxTotalWidth * canvasHeight / boundingBoxTotalHeight;\r\n\tconst ctx = canvas.getContext('2d');\r\n\r\n\tconst startCropWidth = imgNaturalWidth * boundingBox.left_col;\r\n\tconst startCropHeight = imgNaturalHeight * boundingBox.top_row;\r\n\tconst endCropWidth =\r\n\t\timgNaturalWidth /\r\n\t\t((imgNaturalWidth - (imgNaturalWidth * (1 - boundingBox.right_col) + startCropWidth)) / canvasWidth);\r\n\tconst endCropHeight =\r\n\t\timgNaturalHeight /\r\n\t\t((imgNaturalHeight - (imgNaturalHeight * (1 - boundingBox.bottom_row) + startCropHeight)) / canvasHeight);\r\n\r\n\tdebugger;\r\n\r\n\tcanvas.height = canvasHeight;\r\n\tcanvas.width = canvasWidth;\r\n\tctx.drawImage(\r\n\t\timg,\r\n\t\tstartCropWidth,\r\n\t\tstartCropHeight,\r\n\t\timgNaturalWidth,\r\n\t\timgNaturalHeight,\r\n\t\t0,\r\n\t\t0,\r\n\t\tendCropWidth,\r\n\t\tendCropHeight\r\n\t);\r\n};\r\n\r\nexport { createCanvas, findCanvasItem, removePreviousCanvasCollection };\r\n","import React from 'react';\r\n\r\nconst Stats = ({ boundingBox }) => {\r\n\tconst strFace = boundingBox && boundingBox.length > 1 ? 'Faces' : 'Face';\r\n\treturn (\r\n\t\tboundingBox && (\r\n\t\t\t<div className=\"stats\">\r\n\t\t\t\t<h1>Found {`${boundingBox.length} ${strFace}`} </h1>\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n};\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport { createCanvas, findCanvasItem, removePreviousCanvasCollection } from './utils/createCanvas';\nimport Stats from './components/Stats/Stats';\nconst CLARIFAI_API_KEY = process.env.REACT_APP_CLARIFAI_API_KEY;\n\nconst app = new Clarifai.App({\n\tapiKey: CLARIFAI_API_KEY\n});\n\nclass App extends Component {\n\tstate = {\n\t\tinput: 'https://i.kym-cdn.com/photos/images/original/000/994/346/7ac.jpg',\n\t\timageUrl: '',\n\t\timageStatusOk: null,\n\t\timageSize: null,\n\t\tboundingBox: null,\n\t\tcanvasCollection: [],\n\t\tbbIdx: 0\n\t};\n\n\tonInputChange = (e) => {\n\t\tthis.setState({ input: e.target.value });\n\t};\n\n\tonCanvas = (canvas, id) => {\n\t\tconst canvasCollection = this.state.canvasCollection.slice();\n\n\t\tconst canvasItem = {\n\t\t\tid,\n\t\t\tcanvas\n\t\t};\n\t\tconst canvasExist = findCanvasItem(id, canvasCollection);\n\n\t\tdebugger;\n\t\tif (!canvasExist) {\n\t\t\tcanvasCollection.push(canvasItem);\n\n\t\t\tthis.setState({ canvasCollection: canvasCollection });\n\t\t}\n\t};\n\n\tonMainImageLoad = (e, boundingBoxArr) => {\n\t\t// const bbIdx = this.state.bbIdx;\n\t\tconst img = e.target;\n\t\t// const boundingBox = boundingBoxArr[bbIdx].region_info.bounding_box;\n\t\tboundingBoxArr.forEach(({ region_info }) => {\n\t\t\tconst boundingBox = region_info.bounding_box;\n\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\n\t\t\tcreateCanvas.call(this, id, img, boundingBox);\n\t\t});\n\n\t\tremovePreviousCanvasCollection.call(this, this.state.canvasCollection.slice());\n\t\t// this.setState({ imageSize: img });\n\t\t// this.setState({ bbIdx: bbIdx + 1 });\n\t};\n\n\tonButtonSubmit = (e) => {\n\t\tdebugger;\n\t\t// const canvasCollection = this.state.canvasCollection;\n\t\t// canvasCollection.forEach((canvas) => canvas === null);\n\t\tapp.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(\n\t\t\t(response) => {\n\t\t\t\tconst box = response.outputs[0].data.regions;\n\t\t\t\tthis.setState({ boundingBox: box });\n\t\t\t\tthis.setState({ imageStatusOk: true });\n\t\t\t\tthis.setState({ imageUrl: this.state.input });\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tthis.setState({ imageStatusOk: err.status });\n\t\t\t\tthis.setState({ boundingBox: null });\n\t\t\t\t// there was an error\n\t\t\t}\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Logo />\n\t\t\t\t<main>\n\t\t\t\t\t<ImageLinkForm\n\t\t\t\t\t\tinputValue={this.state.input}\n\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t\t\t\tonInputChange={this.onInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stats boundingBox={this.state.boundingBox} />\n\t\t\t\t\t<FaceRecognition\n\t\t\t\t\t\timageStatus={this.state.imageStatusOk}\n\t\t\t\t\t\timageUrl={this.state.imageUrl}\n\t\t\t\t\t\tonMainImageLoad={this.onMainImageLoad}\n\t\t\t\t\t\tboundingBox={this.state.boundingBox}\n\t\t\t\t\t\tonCanvas={this.onCanvas}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}