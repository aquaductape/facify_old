{"version":3,"sources":["components/ImageLinkForm/ImageLinkForm.js","components/Error/Error400.js","components/FaceRecognition/ImagePanel/Bounding/BoundingBox.js","components/FaceRecognition/ImagePanel/ImageDemo.js","components/FaceRecognition/ImagePanel/Bounding/BoundingInfo.js","components/FaceRecognition/ImagePanel/InfoDemo.js","components/FaceRecognition/FaceRecognition.js","components/Logo/Logo.js","utils/createCanvas.js","components/Stats/Stats.js","App.js","serviceWorker.js","index.js"],"names":["ImageLinkForm","_ref","inputValue","onInputChange","onImageUpload","onButtonSubmit","react_default","a","createElement","className","onChange","type","name","id","accept","htmlFor","autoFocus","spellCheck","value","placeholder","onClick","Error400","BoundingBox","boundingBox","renderBox","top","top_row","right","right_col","bottom","bottom_row","left","left_col","style","ImageDemo","imageUrl","onMainImageLoad","onLoad","e","src","alt","map","_ref2","region_info","bounding_box","concat","Bounding_BoundingBox","key","BoundingInfo","boxId","onCanvas","ref","canvas","InfoDemo","Bounding_BoundingInfo","FaceRecognition","imageStatus","maxWidth","ImagePanel_ImageDemo","ImagePanel_InfoDemo","Error_Error400","Logo","findCanvasItem","canvasCollection","find","removePreviousCanvasCollection","filteredCollection","filter","clientHeight","clientWidth","this","setState","createCanvas","img","imgClientWidth","offsetWidth","imgClientHeight","offsetHeight","imgNaturalWidth","naturalWidth","imgNaturalHeight","naturalHeight","boundingBoxTotalWidth","boundingBoxTotalHeight","state","canvasWidth","ctx","getContext","startCropWidth","startCropHeight","endCropWidth","endCropHeight","height","width","drawImage","Stats","strFace","length","app","Clarifai","App","apiKey","process","input","imageStatusOk","imageSize","bbIdx","_this","target","slice","canvasItem","push","boundingBoxArr","forEach","call","Object","assertThisInitialized","file","files","reader","FileReader","addEventListener","imgURL","result","imgBase64Only","replace","models","predict","FACE_DETECT_MODEL","base64","then","response","box","outputs","data","regions","err","status","readAsDataURL","inputVal","trim","components_Logo_Logo","components_ImageLinkForm_ImageLinkForm","components_Stats_Stats","components_FaceRecognition_FaceRecognition","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.677d9204.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ImageLinkForm = ({ inputValue, onInputChange, onImageUpload, onButtonSubmit }) => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<div>\r\n\t\t\t\t<div className=\"input-group\">\r\n\t\t\t\t\t<div className=\"multifile-upload-group\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tonChange={onImageUpload}\r\n\t\t\t\t\t\t\ttype=\"file\"\r\n\t\t\t\t\t\t\tname=\"file\"\r\n\t\t\t\t\t\t\tid=\"file\"\r\n\t\t\t\t\t\t\tclassName=\"input-file--hidden\"\r\n\t\t\t\t\t\t\taccept=\"image/*\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label className=\"label-input-file\" htmlFor=\"file\">\r\n\t\t\t\t\t\t\tUpload Image\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\tspellCheck=\"false\"\r\n\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\tonChange={onInputChange}\r\n\t\t\t\t\t\t\tclassName=\"input-text\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"Or type URL...\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button onClick={onButtonSubmit} className=\"input-button\">\r\n\t\t\t\t\t\tDetect\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst Error400 = () => {\r\n\treturn <div className=\"error-message\">Oops! Something went wrong :( Perhapes the url is incorrect</div>;\r\n};\r\n\r\nexport default Error400;\r\n","import React from 'react';\r\n\r\nconst BoundingBox = ({ boundingBox }) => {\r\n\tconst renderBox = {\r\n\t\ttop: boundingBox.top_row * 100 + '%',\r\n\t\tright: 100 - boundingBox.right_col * 100 + '%',\r\n\t\tbottom: 100 - boundingBox.bottom_row * 100 + '%',\r\n\t\tleft: boundingBox.left_col * 100 + '%'\r\n\t};\r\n\treturn <div className=\"bounding-box\" style={renderBox} />;\r\n};\r\n\r\nexport default BoundingBox;\r\n","import React from 'react';\r\nimport BoundingBox from './Bounding/BoundingBox';\r\n\r\nconst ImageDemo = ({ imageUrl, onMainImageLoad, boundingBox }) => {\r\n\treturn (\r\n\t\t<div className=\"container\">\r\n\t\t\t<img onLoad={(e) => onMainImageLoad(e, boundingBox)} className=\"image-demo\" src={imageUrl} alt=\"\" />\r\n\t\t\t{boundingBox.map(({ region_info }) => {\r\n\t\t\t\tconst boundingBox = region_info.bounding_box;\r\n\t\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\r\n\t\t\t\treturn <BoundingBox key={id} boundingBox={region_info.bounding_box} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ImageDemo;\r\n","import React from 'react';\r\n\r\nconst BoundingInfo = ({ boxId, onCanvas }) => {\r\n\tdebugger;\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<canvas ref={(canvas) => (canvas ? onCanvas(canvas, boxId) : null)} />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default BoundingInfo;\r\n","import React from 'react';\r\nimport BoundingInfo from './Bounding/BoundingInfo';\r\n\r\nconst InfoDemo = ({ boundingBox, onCanvas }) => {\r\n\treturn (\r\n\t\t<div className=\"info-demo\">\r\n\t\t\t{boundingBox.map(({ region_info }) => {\r\n\t\t\t\tconst boundingBox = region_info.bounding_box;\r\n\t\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\r\n\t\t\t\treturn <BoundingInfo key={id} boxId={id} onCanvas={onCanvas} />;\r\n\t\t\t})}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default InfoDemo;\r\n","import React from 'react';\r\nimport './FaceRecognition.css';\r\nimport Error400 from '../Error/Error400';\r\nimport ImageDemo from './ImagePanel/ImageDemo';\r\nimport InfoDemo from './ImagePanel/InfoDemo';\r\n\r\nconst FaceRecognition = ({ imageStatus, imageUrl, boundingBox, onMainImageLoad, onCanvas }) => {\r\n\tlet render;\r\n\tif (imageStatus === null) {\r\n\t\trender = null;\r\n\t} else if (imageStatus !== 400) {\r\n\t\trender = (\r\n\t\t\t<div className=\"image-panel\" style={{ maxWidth: '800px' }}>\r\n\t\t\t\t<ImageDemo imageUrl={imageUrl} boundingBox={boundingBox} onMainImageLoad={onMainImageLoad} />\r\n\t\t\t\t<InfoDemo boundingBox={boundingBox} onCanvas={onCanvas} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t} else {\r\n\t\trender = <Error400 />;\r\n\t}\r\n\treturn render;\r\n};\r\n\r\nexport default FaceRecognition;\r\n","import React from 'react';\r\n\r\nconst Logo = () => {\r\n\treturn <div id=\"logo\">ᖴᗩᑕIᖴY</div>;\r\n};\r\n\r\nexport default Logo;\r\n","const findCanvasItem = (id, canvasCollection) => {\r\n\treturn canvasCollection.find((canvas) => canvas.id === id);\r\n};\r\n\r\nconst removePreviousCanvasCollection = function(canvasCollection) {\r\n\tconst filteredCollection = canvasCollection.filter((canvas) => canvas.clientHeight && canvas.clientWidth);\r\n\tdebugger;\r\n\tthis.setState({ canvasCollection: filteredCollection });\r\n};\r\n\r\nconst createCanvas = function(id, img, boundingBox) {\r\n\tconst imgClientWidth = img.offsetWidth;\r\n\tconst imgClientHeight = img.offsetHeight;\r\n\tconst imgNaturalWidth = img.naturalWidth;\r\n\tconst imgNaturalHeight = img.naturalHeight;\r\n\r\n\tconst boundingBoxTotalWidth =\r\n\t\timgClientWidth - imgClientWidth * (boundingBox.left_col + (1 - boundingBox.right_col));\r\n\tconst boundingBoxTotalHeight =\r\n\t\timgClientHeight - imgClientHeight * (boundingBox.top_row + (1 - boundingBox.bottom_row));\r\n\r\n\tconst canvasCollection = this.state.canvasCollection;\r\n\tlet canvas = findCanvasItem(id, canvasCollection);\r\n\tcanvas = canvas.canvas;\r\n\tconst canvasHeight = 70;\r\n\tconst canvasWidth = boundingBoxTotalWidth * canvasHeight / boundingBoxTotalHeight;\r\n\tconst ctx = canvas.getContext('2d');\r\n\r\n\tconst startCropWidth = imgNaturalWidth * boundingBox.left_col;\r\n\tconst startCropHeight = imgNaturalHeight * boundingBox.top_row;\r\n\tconst endCropWidth =\r\n\t\timgNaturalWidth /\r\n\t\t((imgNaturalWidth - (imgNaturalWidth * (1 - boundingBox.right_col) + startCropWidth)) / canvasWidth);\r\n\tconst endCropHeight =\r\n\t\timgNaturalHeight /\r\n\t\t((imgNaturalHeight - (imgNaturalHeight * (1 - boundingBox.bottom_row) + startCropHeight)) / canvasHeight);\r\n\r\n\tdebugger;\r\n\r\n\tcanvas.height = canvasHeight;\r\n\tcanvas.width = canvasWidth;\r\n\tctx.drawImage(\r\n\t\timg,\r\n\t\tstartCropWidth,\r\n\t\tstartCropHeight,\r\n\t\timgNaturalWidth,\r\n\t\timgNaturalHeight,\r\n\t\t0,\r\n\t\t0,\r\n\t\tendCropWidth,\r\n\t\tendCropHeight\r\n\t);\r\n};\r\n\r\nexport { createCanvas, findCanvasItem, removePreviousCanvasCollection };\r\n","import React from 'react';\r\n\r\nconst Stats = ({ boundingBox }) => {\r\n\tconst strFace = boundingBox && boundingBox.length > 1 ? 'Faces' : 'Face';\r\n\treturn (\r\n\t\tboundingBox && (\r\n\t\t\t<div className=\"stats\">\r\n\t\t\t\t<h1>Found {`${boundingBox.length} ${strFace}`} </h1>\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n};\r\n\r\nexport default Stats;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Logo from './components/Logo/Logo';\nimport Clarifai from 'clarifai';\nimport { createCanvas, findCanvasItem, removePreviousCanvasCollection } from './utils/createCanvas';\nimport Stats from './components/Stats/Stats';\nconst CLARIFAI_API_KEY = process.env.REACT_APP_CLARIFAI_API_KEY;\n\nconst app = new Clarifai.App({\n\tapiKey: CLARIFAI_API_KEY\n});\n\nclass App extends Component {\n\tstate = {\n\t\tinput: '',\n\t\timageUrl: '',\n\t\timageStatusOk: null,\n\t\timageSize: null,\n\t\tboundingBox: null,\n\t\tcanvasCollection: [],\n\t\tbbIdx: 0\n\t};\n\n\tonInputChange = (e) => {\n\t\tthis.setState({ input: e.target.value });\n\t};\n\n\tonCanvas = (canvas, id) => {\n\t\tconst canvasCollection = this.state.canvasCollection.slice();\n\n\t\tconst canvasItem = {\n\t\t\tid,\n\t\t\tcanvas\n\t\t};\n\t\tconst canvasExist = findCanvasItem(id, canvasCollection);\n\n\t\tdebugger;\n\t\tif (!canvasExist) {\n\t\t\tcanvasCollection.push(canvasItem);\n\n\t\t\tthis.setState({ canvasCollection: canvasCollection });\n\t\t}\n\t};\n\n\tonMainImageLoad = (e, boundingBoxArr) => {\n\t\tconst img = e.target;\n\n\t\tboundingBoxArr.forEach(({ region_info }) => {\n\t\t\tconst boundingBox = region_info.bounding_box;\n\t\t\tconst id = `${boundingBox.top_row}${boundingBox.left_col}${boundingBox.bottom_row}${boundingBox.right_col}`;\n\t\t\tcreateCanvas.call(this, id, img, boundingBox);\n\t\t});\n\n\t\tremovePreviousCanvasCollection.call(this, this.state.canvasCollection.slice());\n\t};\n\n\tonImageUpload = (e) => {\n\t\tconst file = e.target.files[0];\n\t\tconst reader = new FileReader();\n\t\tdebugger;\n\t\treader.addEventListener(\n\t\t\t'load',\n\t\t\t() => {\n\t\t\t\tconst imgURL = reader.result;\n\t\t\t\tconst imgBase64Only = imgURL.replace(/data:.*;base64,/, '');\n\t\t\t\tapp.models\n\t\t\t\t\t.predict(Clarifai.FACE_DETECT_MODEL, {\n\t\t\t\t\t\tbase64: imgBase64Only\n\t\t\t\t\t})\n\t\t\t\t\t.then(\n\t\t\t\t\t\t(response) => {\n\t\t\t\t\t\t\tconst box = response.outputs[0].data.regions;\n\t\t\t\t\t\t\tthis.setState({ boundingBox: box });\n\t\t\t\t\t\t\tthis.setState({ imageStatusOk: true });\n\t\t\t\t\t\t\tthis.setState({ imageUrl: imgURL });\n\t\t\t\t\t\t},\n\t\t\t\t\t\t(err) => {\n\t\t\t\t\t\t\tthis.setState({ imageStatusOk: err.status });\n\t\t\t\t\t\t\tthis.setState({ boundingBox: null });\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t},\n\t\t\tfalse\n\t\t);\n\n\t\tif (file) {\n\t\t\treader.readAsDataURL(file);\n\t\t}\n\t};\n\n\tonButtonSubmit = (e) => {\n\t\tconst inputVal = this.state.input.trim();\n\n\t\tif (inputVal === this.state.imageUrl) {\n\t\t\treturn null;\n\t\t}\n\n\t\tapp.models.predict(Clarifai.FACE_DETECT_MODEL, inputVal).then(\n\t\t\t(response) => {\n\t\t\t\tconst box = response.outputs[0].data.regions;\n\t\t\t\tthis.setState({ boundingBox: box });\n\t\t\t\tthis.setState({ imageStatusOk: true });\n\t\t\t\tthis.setState({ imageUrl: inputVal });\n\t\t\t},\n\t\t\t(err) => {\n\t\t\t\tthis.setState({ imageStatusOk: err.status });\n\t\t\t\tthis.setState({ boundingBox: null });\n\t\t\t}\n\t\t);\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Logo />\n\t\t\t\t<main>\n\t\t\t\t\t<ImageLinkForm\n\t\t\t\t\t\tinputValue={this.state.input}\n\t\t\t\t\t\tonImageUpload={this.onImageUpload}\n\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t\t\t\tonInputChange={this.onInputChange}\n\t\t\t\t\t/>\n\t\t\t\t\t<Stats boundingBox={this.state.boundingBox} />\n\t\t\t\t\t<FaceRecognition\n\t\t\t\t\t\timageStatus={this.state.imageStatusOk}\n\t\t\t\t\t\timageUrl={this.state.imageUrl}\n\t\t\t\t\t\tonMainImageLoad={this.onMainImageLoad}\n\t\t\t\t\t\tboundingBox={this.state.boundingBox}\n\t\t\t\t\t\tonCanvas={this.onCanvas}\n\t\t\t\t\t/>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}